{"version":3,"sources":["components/Broadcast.js","redux/actions.js","components/Broadcasts.js","components/Record.js","components/Records.js","components/App.js","redux/broadcasts.js","redux/records.js","index.js"],"names":["Broadcast","props","opened","useSelector","state","broadcasts","dispatch","useDispatch","handleClick","id","type","payload","fetch","then","response","json","loadRecords","key","broadcast","_id","className","onClick","title","Broadcasts","map","Record","record","content","Records","loading","records","App","useEffect","initialState","logger","createLogger","collapsed","diff","reducer","combineReducers","action","store","createStore","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.999cce7f.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./Broadcast.css\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { loadRecords } from \"../redux/actions\";\r\n\r\nfunction Broadcast(props) {\r\n  const opened = useSelector((state) => state.broadcasts.opened);\r\n  const dispatch = useDispatch();\r\n\r\n  const handleClick = (id) => {\r\n    dispatch(loadRecords(id));\r\n  };\r\n  return (\r\n    <div\r\n      key={props.broadcast._id}\r\n      className={`title ${opened === props.broadcast._id ? \"active\" : \"\"}`}\r\n      onClick={() => handleClick(props.broadcast._id)}\r\n    >\r\n      {props.broadcast.title}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Broadcast;\r\n","export function loadBroadcasts() {\r\n  return (dispatch) => {\r\n    dispatch({ type: \"load_broadcasts_start\" });\r\n\r\n    fetch(\"http://151.248.117.7:5005/api/onlines/\")\r\n      .then((response) => response.json())\r\n      .then((json) => {\r\n        dispatch({\r\n          type: \"load_broadcasts_success\",\r\n          payload: json,\r\n        });\r\n      });\r\n  };\r\n}\r\n\r\nexport function loadRecords(id) {\r\n  return (dispatch) => {\r\n    dispatch({ type: \"load_records_start\" });\r\n    dispatch({ type: \"set_opened\", payload: id });\r\n\r\n    fetch(`http://151.248.117.7:5005/api/onlines/${id}`)\r\n      .then((response) => response.json())\r\n      .then((json) => {\r\n        dispatch({\r\n          type: \"load_records_success\",\r\n          payload: json,\r\n        });\r\n      });\r\n  };\r\n}\r\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport \"./Broadcasts.css\";\r\nimport Broadcast from \"./Broadcast\";\r\n\r\nfunction Broadcasts() {\r\n  const broadcasts = useSelector((state) => state.broadcasts.broadcasts);\r\n\r\n  return (\r\n    <div className=\"broad\">\r\n      {broadcasts.map((broadcast) => {\r\n        return <Broadcast broadcast={broadcast} />;\r\n      })}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Broadcasts;\r\n","import React from \"react\";\r\nimport \"./Record.css\";\r\nfunction Record({ record }) {\r\n  return (\r\n    <div className=\"record\">\r\n      <div>{record.title}</div>\r\n      <div>{record.content}</div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Record;\r\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport \"./Records.css\";\r\nimport Record from \"./Record\";\r\n\r\nfunction Records() {\r\n  const opened = useSelector((state) => state.broadcasts.opened);\r\n  const loading = useSelector((state) => state.records.loading);\r\n  const records = useSelector((state) => state.records.records);\r\n\r\n  if (opened === null) {\r\n    return (\r\n      <div className=\"choice\">\r\n        <i className=\"fas fa-long-arrow-alt-left\" />\r\n        Выберите трансляцию\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (loading) {\r\n    return <div className=\"choice\">идёт загрузка</div>;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {records.map((record) => {\r\n        return <Record record={record} />;\r\n      })}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Records;\r\n","import React, { useEffect } from \"react\";\r\nimport Broadcasts from \"./Broadcasts\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { loadBroadcasts } from \"../redux/actions\";\r\nimport \"./App.css\";\r\nimport Records from \"./Records\";\r\n\r\nfunction App() {\r\n  const loading = useSelector((state) => state.broadcasts.loading);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(loadBroadcasts());\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      {loading ? \"Идёт загрузка...\" : <Broadcasts />}\r\n      <Records />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const initialState = {\r\n  loading: true,\r\n  opened: null,\r\n  broadcasts: [],\r\n};\r\n\r\nexport default function broadcasts(state = initialState, action) {\r\n  switch (action.type) {\r\n    case \"load_broadcasts_start\":\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n      };\r\n\r\n    case \"set_opened\":\r\n      return {\r\n        ...state,\r\n        opened: action.payload,\r\n      };\r\n\r\n    case \"load_broadcasts_success\":\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        broadcasts: action.payload,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","const initialState = {\r\n  loading: false,\r\n  records: [],\r\n};\r\n\r\nexport default function records(state = initialState, action) {\r\n  switch (action.type) {\r\n    case \"load_records_start\":\r\n      return {\r\n        ...state,\r\n        loadRecords: true,\r\n      };\r\n\r\n    case \"load_records_success\":\r\n      return {\r\n        ...state,\r\n        loadRecords: false,\r\n        records: action.payload,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./components/App\";\r\nimport { applyMiddleware, combineReducers, createStore } from \"redux\";\r\nimport { createLogger } from \"redux-logger\";\r\nimport thunk from \"redux-thunk\";\r\nimport { Provider } from \"react-redux\";\r\nimport broadcasts from \"./redux/broadcasts\";\r\nimport records from \"./redux/records\";\r\n\r\nconst logger = createLogger({\r\n  collapsed: true,\r\n  diff: true,\r\n});\r\n\r\nconst reducer = combineReducers({ broadcasts: broadcasts, records });\r\n\r\nconst store = createStore(reducer, applyMiddleware(thunk, logger));\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}